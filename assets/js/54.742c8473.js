(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{356:function(t,s,a){"use strict";a.r(s);var n=a(0),c=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"时间管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#时间管理","aria-hidden":"true"}},[t._v("#")]),t._v(" 时间管理")]),a("h2",{attrs:{id:"概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概述","aria-hidden":"true"}},[t._v("#")]),t._v(" 概述")]),a("h3",{attrs:{id:"基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本概念","aria-hidden":"true"}},[t._v("#")]),t._v(" 基本概念")]),a("p",[t._v("时间管理以系统时钟为基础。时间管理提供给应用程序所有和时间有关的服务。")]),a("p",[t._v("系统时钟是由定时/计数器产生的输出脉冲触发中断而产生的，一般定义为整数或长整数。输出脉冲的周期叫做一个“时钟滴答”。系统时钟也称为时标或者Tick。一个 Tick 的时长可以静态配置。")]),a("p",[t._v("用户是以秒、毫秒为单位计时，而芯片 CPU 的计时是以 Tick 为单位的，当用户需要对系统操作时，例如任务挂起、延时等，输入秒为单位的数值，此时需要时间管理模块对二者进行转换。")]),a("p",[t._v("Tick 与秒之间的对应关系可以配置。")]),a("p",[t._v("Huawei LiteOS 的时间管理模块提供时间转换、统计、延迟功能以满足用户对时间相关需求的实现。")]),a("h3",{attrs:{id:"相关概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#相关概念","aria-hidden":"true"}},[t._v("#")]),t._v(" 相关概念")]),a("ul",[a("li",[t._v("Cycle")])]),a("p",[t._v("系统最小的计时单位。Cycle 的时长由系统主频决定，系统主频就是每秒钟的 Cycle 数。")]),a("ul",[a("li",[t._v("Tick")])]),a("p",[t._v("Tick 是操作系统的基本时间单位，对应的时长由系统主频及每秒 Tick 数决定，由用户配置。")]),a("h2",{attrs:{id:"开发指导"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开发指导","aria-hidden":"true"}},[t._v("#")]),t._v(" 开发指导")]),a("h3",{attrs:{id:"使用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用场景","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用场景")]),a("p",[t._v("用户需要了解当前系统运行的时间以及 Tick 与秒、毫秒之间的转换关系等。")]),a("h3",{attrs:{id:"功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#功能","aria-hidden":"true"}},[t._v("#")]),t._v(" 功能")]),a("p",[t._v("Huawei LiteOS系统中的时间管理主要提供以下两种功能：")]),a("ul",[a("li",[a("p",[t._v("时间转换：根据主频实现 CPU Tick 数到毫秒、微秒的转换。")])]),a("li",[a("p",[t._v("时间统计：获取系统Tick数。")])])]),a("table",[a("thead",[a("tr",[a("th",[t._v("功能分类")]),a("th",[t._v("接口名")]),a("th",[t._v("描述")])])]),a("tbody",[a("tr",[a("td",[t._v("时间转换")]),a("td",[a("code",[t._v("LOS_MS2Tick")])]),a("td",[t._v("毫秒转换成Tick")])]),a("tr",[a("td"),a("td",[a("code",[t._v("LOS_Tick2MS")])]),a("td",[t._v("Tick转化为毫秒")])]),a("tr",[a("td",[t._v("时间统计")]),a("td",[a("code",[t._v("LOS_CyclePerTickGet")])]),a("td",[t._v("每个Tick多少Cycle数")])]),a("tr",[a("td"),a("td",[a("code",[t._v("LOS_TickCountGet")])]),a("td",[t._v("获取当前的Tick数")])])])]),a("h3",{attrs:{id:"开发流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开发流程","aria-hidden":"true"}},[t._v("#")]),t._v(" 开发流程")]),a("p",[t._v("时间管理的典型开发流程：")]),a("ol",[a("li",[a("p",[t._v("确认配置项 "),a("code",[t._v("LOSCFG_BASE_CORE_TICK_HW_TIME")]),t._v(" 为 "),a("code",[t._v("YES")]),t._v(" 开启状态。")]),a("p",[t._v("在 "),a("code",[t._v("los_config.h")]),t._v(" 中配置每秒的 Tick 数 "),a("code",[t._v("LOSCFG_BASE_CORE_TICK_PER_SECOND")]),t._v("；")])]),a("li",[a("p",[t._v("调用时钟转换接口。")])]),a("li",[a("p",[t._v("获取系统 "),a("code",[t._v("Tick")]),t._v(" 数完成时间统计。")]),a("p",[t._v("通过 "),a("code",[t._v("LOS_TickCountGet")]),t._v(" 获取全局 "),a("code",[t._v("g_ullTickCount")]),t._v("。")])])]),a("h2",{attrs:{id:"注意事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意事项","aria-hidden":"true"}},[t._v("#")]),t._v(" 注意事项")]),a("ul",[a("li",[a("p",[t._v("获取系统Tick数需要在系统时钟使能之后。")])]),a("li",[a("p",[t._v("时间管理不是单独的功能模块，依赖于 "),a("code",[t._v("los_config.h")]),t._v(" 中的 "),a("code",[t._v("OS_SYS_CLOCK")]),t._v(" 和 "),a("code",[t._v("LOSCFG_BASE_CORE_TICK_PER_SECOND")]),t._v(" 两个配置选项。")])]),a("li",[a("p",[t._v("系统的 Tick 数在关中断的情况下不进行计数，故系统 Tick 数不能作为准确时间计算。")])])]),a("h2",{attrs:{id:"编程实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编程实例","aria-hidden":"true"}},[t._v("#")]),t._v(" 编程实例")]),a("h3",{attrs:{id:"实例描述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例描述","aria-hidden":"true"}},[t._v("#")]),t._v(" 实例描述")]),a("p",[t._v("在下面的例子中，介绍了时间管理的基本方法，包括：")]),a("ol",[a("li",[a("p",[t._v("时间转换：将毫秒数转换为 Tick 数，或将 Tick 数转换为毫秒数。")])]),a("li",[a("p",[t._v("时间统计和时间延迟：统计每秒的 Cycle 数、Tick 数和延迟后的 Tick 数。")])])]),a("h3",{attrs:{id:"编程示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编程示例","aria-hidden":"true"}},[t._v("#")]),t._v(" 编程示例")]),a("p",[t._v("前提条件：")]),a("ul",[a("li",[a("p",[t._v("配好 "),a("code",[t._v("LOSCFG_BASE_CORE_TICK_PER_SECOND")]),t._v(" 每秒的 Tick 数。")])]),a("li",[a("p",[t._v("配好 "),a("code",[t._v("OS_SYS_CLOCK")]),t._v(" 系统时钟，单位: Hz。")])])]),a("p",[t._v("时间转换：")]),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[t._v("VOID "),a("span",{attrs:{class:"token function"}},[t._v("Example_TransformTime")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("VOID"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n    UINT32 uwMs"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    UINT32 uwTick"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    uwTick "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("LOS_MS2Tick")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("10000")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{attrs:{class:"token comment"}},[t._v("//10000 ms数转换为Tick数")]),t._v("\n    "),a("span",{attrs:{class:"token function"}},[t._v("printf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"uwTick = %d.\\r\\n"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("uwTick"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    uwMs"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("LOS_Tick2MS")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("100")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{attrs:{class:"token comment"}},[t._v("//100 Tick数转换为ms数")]),t._v("\n    "),a("span",{attrs:{class:"token function"}},[t._v("printf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"uwMs = %d.\\r\\n"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("uwMs"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("   \n")])])]),a("p",[t._v("时间统计和时间延迟：")]),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[t._v("UINT32 "),a("span",{attrs:{class:"token function"}},[t._v("Example_GetTick")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("VOID"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    UINT32 uwRet "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" LOS_OK"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    UINT32 uwcyclePerTick"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    UINT64 uwTickCount1"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("uwTickCount2"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    uwcyclePerTick  "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("LOS_CyclePerTickGet")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{attrs:{class:"token comment"}},[t._v("//每个Tick多少Cycle数")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v(" uwcyclePerTick"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token function"}},[t._v("printf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"LOS_CyclePerTickGet = %d.\\r\\n"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" uwcyclePerTick"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    uwTickCount1 "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("LOS_TickCountGet")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("//获取Tick数")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v(" uwTickCount1"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token function"}},[t._v("printf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"LOS_TickCountGet = %d.\\r\\n"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("UINT32"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("uwTickCount1"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token function"}},[t._v("LOS_TaskDelay")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("200")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("//延迟200 Tick")]),t._v("\n    uwTickCount2 "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("LOS_TickCountGet")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v(" uwTickCount2"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token function"}},[t._v("printf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"LOS_TickCountGet after delay = %d.\\r\\n"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("UINT32"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("uwTickCount2"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        \n    "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("uwTickCount2 "),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" uwTickCount1"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("200")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        uwRet "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("LOS_InspectStatusSetByID")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LOS_INSPECT_SYSTIC"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("LOS_INSPECT_STU_SUCCESS"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LOS_OK "),a("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v(" uwRet"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n        "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{attrs:{class:"token function"}},[t._v("printf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"Set Inspect Status Err.\\r\\n"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" LOS_OK"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   \n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        uwRet "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("LOS_InspectStatusSetByID")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LOS_INSPECT_SYSTIC"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("LOS_INSPECT_STU_ERROR"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LOS_OK "),a("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v(" uwRet"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n        "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{attrs:{class:"token function"}},[t._v("printf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"Set Inspect Status Err.\\r\\n"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" LOS_NOK"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n")])])]),a("h3",{attrs:{id:"结果验证"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结果验证","aria-hidden":"true"}},[t._v("#")]),t._v(" 结果验证")]),a("p",[t._v("编译运行得到的结果为：")])])}],!1,null,null,null);s.default=c.exports}}]);