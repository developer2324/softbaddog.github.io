(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{346:function(t,a,s){"use strict";s.r(a);var n=s(0),_=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件","aria-hidden":"true"}},[t._v("#")]),t._v(" 事件")]),s("h2",{attrs:{id:"概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概述","aria-hidden":"true"}},[t._v("#")]),t._v(" 概述")]),s("h3",{attrs:{id:"基本概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本概念","aria-hidden":"true"}},[t._v("#")]),t._v(" 基本概念")]),s("p",[t._v("事件是一种实现任务间通信的机制，可用于实现任务间的同步，但事件通信只能是事件类型的通信，无数据传输。一个任务可以等待多个事件的发生：可以是任意一个事件发生时唤醒任务进行事件处理；也可以是几个事件都发生后才唤醒任务进行事件处理。事件集合用32位无符号整型变量来表示，每一位代表一个事件。")]),s("p",[t._v("多任务环境下，任务之间往往需要同步操作，一个等待即是一个同步。事件可以提供一对多、多对多的同步操作。一对多同步模型：一个任务等待多个事件的触发；多对多同步模型：多个任务等待多个事件的触发。")]),s("p",[t._v("任务可以通过创建事件控制块来实现对事件的触发和等待操作。Huawei LiteOS的事件仅用于任务间的同步，不提供数据传输功能。")]),s("p",[t._v("Huawei LiteOS 提供的事件具有如下特点：")]),s("ul",[s("li",[s("p",[t._v("事件不与任务相关联，事件相互独立，一个32位的变量，用于标识该任务发生的事件类型，其中每一位表示一种事件类型（0表示该事件类型未发生、1表示该事件类型已经发生），一共31种事件类型（第25位保留）。")])]),s("li",[s("p",[t._v("事件仅用于任务间的同步，不提供数据传输功能。")])]),s("li",[s("p",[t._v("多次向任务发送同一事件类型，等效于只发送一次。")])]),s("li",[s("p",[t._v("允许多个任务对同一事件进行读写操作。")])]),s("li",[s("p",[t._v("支持事件读写超时机制。")])])]),s("h4",{attrs:{id:"事件控制块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件控制块","aria-hidden":"true"}},[t._v("#")]),t._v(" 事件控制块")]),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("/**\n * @ingroup los_event\n * Event control structure\n */")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" tagEvent\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    UINT32 uwEventID"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("            "),s("span",{attrs:{class:"token comment"}},[t._v("/**标识发生的事件类型位*/")]),t._v("\n    LOS_DL_LIST    stEventList"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{attrs:{class:"token comment"}},[t._v("/**读取事件任务链表*/")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" EVENT_CB_S"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("PEVENT_CB_S"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("code",[t._v("uwEventID")]),t._v("：用于标识该任务发生的事件类型，其中每一位表示一种事件类型（0表示该事件类型未发生、1表示该事件类型已经发生），一共31种事件类型，第25位系统保留。")]),s("h4",{attrs:{id:"事件读取模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件读取模式","aria-hidden":"true"}},[t._v("#")]),t._v(" 事件读取模式")]),s("p",[t._v("在读事件时，可以选择读取模式。读取模式如下：")]),s("ul",[s("li",[s("p",[t._v("所有事件（"),s("code",[t._v("LOS_WAITMODE_AND")]),t._v("）：读取掩码中所有事件类型，只有读取的所有事件类型都发生了，才能读取成功。")])]),s("li",[s("p",[t._v("任一事件（"),s("code",[t._v("LOS_WAITMODE_OR")]),t._v("）： 读取掩码中任一事件类型，读取的事件中任意一种事件类型发生了，就可以读取成功。")])]),s("li",[s("p",[t._v("清除事件（"),s("code",[t._v("LOS_WAITMODE_CLR")]),t._v("）：LOS_WAITMODE_AND| LOS_WAITMODE_CLR或 LOS_WAITMODE_OR| LOS_WAITMODE_CLR 时表示读取成功后，对应事件类型位会自动清除。")])])]),s("h3",{attrs:{id:"运作机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运作机制","aria-hidden":"true"}},[t._v("#")]),t._v(" 运作机制")]),s("p",[t._v("读事件时，可以根据入参事件掩码类型uwEventMask读取事件的单个或者多个事件类型。事件读取成功后，如果设置LOS_WAITMODE_CLR会清除已读取到的事件类型，反之不会清除已读到的事件类型，需显式清除。可以通过入参选择读取模式，读取事件掩码类型中所有事件还是读取事件掩码类型中任意事件。")]),s("p",[t._v("写事件时，对指定事件写入指定的事件类型，可以一次同时写多个事件类型。写事件会触发任务调度。")]),s("p",[t._v("清除事件时，根据入参事件和待清除的事件类型，对事件对应位进行清0操作。")]),s("p",[t._v("事件唤醒任务示意图")]),s("h2",{attrs:{id:"开发指导"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开发指导","aria-hidden":"true"}},[t._v("#")]),t._v(" 开发指导")]),s("h3",{attrs:{id:"使用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用场景","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用场景")]),s("p",[t._v("事件可应用于多种任务同步场合，能够一定程度替代信号量。")]),s("h3",{attrs:{id:"功能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#功能","aria-hidden":"true"}},[t._v("#")]),t._v(" 功能")]),s("p",[t._v("Huawei LiteOS系统中的事件模块为用户提供下面几个接口。")]),s("table",[s("thead",[s("tr",[s("th",[t._v("功能分类")]),s("th",[t._v("接口名")]),s("th",[t._v("描述")])])]),s("tbody",[s("tr",[s("td",[t._v("事件初始化")]),s("td",[s("code",[t._v("LOS_EventInit")])]),s("td",[t._v("初始化一个事件控制块")])]),s("tr",[s("td",[t._v("读事件")]),s("td",[s("code",[t._v("LOS_EventRead")])]),s("td",[t._v("读取指定事件类型，超时时间为相对时间：单位为Tick")])]),s("tr",[s("td",[t._v("写事件")]),s("td",[s("code",[t._v("LOS_EventWrite")])]),s("td",[t._v("写指定的事件类型")])]),s("tr",[s("td",[t._v("清除事件")]),s("td",[s("code",[t._v("LOS_EventClear")])]),s("td",[t._v("清除指定的事件类型")])]),s("tr",[s("td",[t._v("校验事件掩码")]),s("td",[s("code",[t._v("LOS_EventPoll")])]),s("td",[t._v("根据用户传入的事件值、事件掩码及校验模式，返回用户传入的事件是否符合预期")])]),s("tr",[s("td",[t._v("销毁事件")]),s("td",[s("code",[t._v("LOS_EventDestroy")])]),s("td",[t._v("销毁指定的事件控制块")])])])]),s("h3",{attrs:{id:"开发流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开发流程","aria-hidden":"true"}},[t._v("#")]),t._v(" 开发流程")]),s("p",[t._v("使用事件模块的典型流程如下：")]),s("ol",[s("li",[s("p",[t._v("调用事件初始化 "),s("code",[t._v("LOS_EventInit")]),t._v(" 接口，初始化事件等待队列。")])]),s("li",[s("p",[t._v("写事件 "),s("code",[t._v("LOS_EventWrite")]),t._v("，配置事件掩码类型。")])]),s("li",[s("p",[t._v("读事件 "),s("code",[t._v("LOS_EventRead")]),t._v("，可以选择读取模式。")])]),s("li",[s("p",[t._v("清除事件 "),s("code",[t._v("LOS_EventClear")]),t._v("，清除指定的事件类型。")])])]),s("h3",{attrs:{id:"event错误码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#event错误码","aria-hidden":"true"}},[t._v("#")]),t._v(" Event错误码")]),s("p",[t._v("对事件存在失败的可能性操作，包括事件初始化，事件销毁，事件读写，时间清除。")]),s("table",[s("thead",[s("tr",[s("th",[t._v("序号")]),s("th",[t._v("定义")]),s("th",[t._v("实际值")]),s("th",[t._v("描述")]),s("th",[t._v("参考解决方案")])])]),s("tbody",[s("tr",[s("td",[t._v("1")]),s("td",[s("code",[t._v("LOS_ERRNO_EVENT_SETBIT_INVALID")])]),s("td",[t._v("0x02001c00")]),s("td",[t._v("事件ID的第25个bit不能设置为1，因为该位已经作为错误码使用")]),s("td",[t._v("事件ID的第25bit置为0")])]),s("tr",[s("td",[t._v("2")]),s("td",[s("code",[t._v("LOS_ERRNO_EVENT_READ_TIMEOUT")])]),s("td",[t._v("0x02001c01")]),s("td",[t._v("读超时")]),s("td",[t._v("增加等待时间或者重新读取")])]),s("tr",[s("td",[t._v("3")]),s("td",[s("code",[t._v("LOS_ERRNO_EVENT_EVENTMASK_INVALID")])]),s("td",[t._v("0x02001c02")]),s("td",[t._v("入参的事件ID是无效的")]),s("td",[t._v("传入有效的事件ID参数")])]),s("tr",[s("td",[t._v("4")]),s("td",[s("code",[t._v("LOS_ERRNO_EVENT_READ_IN_INTERRUPT")])]),s("td",[t._v("0x02001c03")]),s("td",[t._v("在中断中读取事件")]),s("td",[t._v("启动新的任务来获取事件")])]),s("tr",[s("td",[t._v("5")]),s("td",[s("code",[t._v("LOS_ERRNO_EVENT_FLAGS_INVALID")])]),s("td",[t._v("0x02001c04")]),s("td",[t._v("读取事件的mode无效")]),s("td",[t._v("传入有效的mode参数")])]),s("tr",[s("td",[t._v("6")]),s("td",[s("code",[t._v("LOS_ERRNO_EVENT_READ_IN_LOCK")])]),s("td",[t._v("0x02001c05")]),s("td",[t._v("任务锁住，不能读取事件")]),s("td",[t._v("解锁任务，再读取事件")])]),s("tr",[s("td",[t._v("7")]),s("td",[s("code",[t._v("LOS_ERRNO_EVENT_PTR_NULL")])]),s("td",[t._v("0x02001c06")]),s("td",[t._v("传入的参数为空指针")]),s("td",[t._v("传入非空入参")])])])]),s("p",[s("strong",[t._v("错误码定义：")]),t._v(" 错误码是一个32位的存储单元，31~24位表示错误等级，23~16位表示错误码标志，15~8位代表错误码所属模块，7~0位表示错误码序号，如下")]),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{attrs:{class:"token macro property"}},[t._v("#"),s("span",{attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" LOS_ERRNO_OS_ERROR(MID, ERRNO)  ")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LOS_ERRTYPE_ERROR "),s("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" LOS_ERRNO_OS_ID "),s("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("UINT32"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MID"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("8")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ERRNO"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nLOS_ERRTYPE_ERROR：Define critical OS errors\nLOS_ERRNO_OS_ID：OS error code flag\nMID：OS_MOUDLE_ID\nLOS_MOD_EVENT：Event module ID\nERRNO：error ID number  \n")])])]),s("p",[t._v("例如：")]),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{attrs:{class:"token macro property"}},[t._v("#"),s("span",{attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" LOS_ERRNO_EVENT_READ_IN_LOCK  LOS_ERRNO_OS_ERROR(LOS_MOD_EVENT, 0x05)  ")]),t._v("\n")])])]),s("h2",{attrs:{id:"注意事项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注意事项","aria-hidden":"true"}},[t._v("#")]),t._v(" 注意事项")]),s("ul",[s("li",[s("p",[t._v("在系统初始化之前不能调用读写事件接口。如果调用，则系统运行会不正常。")])]),s("li",[s("p",[t._v("在中断中，可以对事件对象进行写操作，但不能读操作。")])]),s("li",[s("p",[t._v("在锁任务调度状态下，禁止任务阻塞与读事件。")])]),s("li",[s("p",[s("code",[t._v("LOS_EventClear")]),t._v(" 入参值是：要清除的指定事件类型的反码（~uwEvents）。")])]),s("li",[s("p",[t._v("事件掩码的第25位不能使用，原因是为了区别 "),s("code",[t._v("LOS_EventRead")]),t._v(" 接口返回的是事件还是错误码。")])])]),s("h2",{attrs:{id:"编程实例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编程实例","aria-hidden":"true"}},[t._v("#")]),t._v(" 编程实例")]),s("h3",{attrs:{id:"实例描述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例描述","aria-hidden":"true"}},[t._v("#")]),t._v(" 实例描述")]),s("p",[t._v("示例中，任务 "),s("code",[t._v("Example_TaskEntry")]),t._v(" 创建一个任务 "),s("code",[t._v("Example_Event")]),t._v("，"),s("code",[t._v("Example_Event")]),t._v(" 读事件阻塞，Example_TaskEntry向该任务写事件。")]),s("ol",[s("li",[s("p",[t._v("在任务 "),s("code",[t._v("Example_TaskEntry")]),t._v(" 创建任务 "),s("code",[t._v("Example_Event")]),t._v("，其中任务 "),s("code",[t._v("Example_Event")]),t._v(" 优先级高于 "),s("code",[t._v("Example_TaskEntry")]),t._v("。")])]),s("li",[s("p",[t._v("在任务 "),s("code",[t._v("Example_Event")]),t._v(" 中读事件 0x00000001，阻塞，发生任务切换，执行任务 "),s("code",[t._v("Example_TaskEntry")]),t._v("。")])]),s("li",[s("p",[t._v("在任务 "),s("code",[t._v("Example_TaskEntry")]),t._v(" 向任务 "),s("code",[t._v("Example_Event")]),t._v(" 写事件 0x00000001，发生任务切换，执行任务 "),s("code",[t._v("Example_Event")]),t._v("。")])]),s("li",[s("p",[s("code",[t._v("Example_Event")]),t._v(" 得以执行，直到任务结束。")])]),s("li",[s("p",[s("code",[t._v("Example_TaskEntry")]),t._v(" 得以执行，直到任务结束。")])])]),s("h3",{attrs:{id:"编程示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编程示例","aria-hidden":"true"}},[t._v("#")]),t._v(" 编程示例")]),s("p",[t._v("可以通过打印的先后顺序理解事件操作时伴随的任务切换。")]),s("p",[t._v("代码实现如下：")]),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("/*任务PID*/")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" UINT32 g_TestTaskID"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{attrs:{class:"token comment"}},[t._v("/*事件控制结构体*/")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" EVENT_CB_S  example_event"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{attrs:{class:"token comment"}},[t._v("/*等待的事件类型*/")]),t._v("\n"),s("span",{attrs:{class:"token macro property"}},[t._v("#"),s("span",{attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" event_wait 0x00000001")]),t._v("\n\n"),s("span",{attrs:{class:"token comment"}},[t._v("/*用例任务入口函数*/")]),t._v("\nVOID "),s("span",{attrs:{class:"token function"}},[t._v("Example_Event")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("VOID"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    UINT32 uwEvent"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    UINT32 uwRet "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" LOS_OK"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{attrs:{class:"token comment"}},[t._v("/*超时 等待方式读事件,超时时间为100 Tick\n    若100 Tick 后未读取到指定事件，读事件超时，任务直接唤醒*/")]),t._v("\n    "),s("span",{attrs:{class:"token function"}},[t._v("printf")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"Example_Event wait event 0x%x \\r\\n"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("event_wait"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    uwEvent "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("LOS_EventRead")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v("example_event"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" event_wait"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LOS_WAITMODE_AND"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("100")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("uwEvent "),s("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" event_wait"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{attrs:{class:"token function"}},[t._v("printf")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"Example_Event,read event :0x%x\\r\\n"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("uwEvent"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        uwRet "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("LOS_InspectStatusSetByID")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LOS_INSPECT_EVENT"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("LOS_INSPECT_STU_SUCCESS"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LOS_OK "),s("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v(" uwRet"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{attrs:{class:"token function"}},[t._v("printf")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"Set Inspect Status Err\\r\\n"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{attrs:{class:"token function"}},[t._v("printf")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"Example_Event,read event timeout\\r\\n"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        uwRet "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("LOS_InspectStatusSetByID")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LOS_INSPECT_EVENT"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("LOS_INSPECT_STU_ERROR"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LOS_OK "),s("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v(" uwRet"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{attrs:{class:"token function"}},[t._v("printf")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"Set Inspect Status Err\\r\\n"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nUINT32 "),s("span",{attrs:{class:"token function"}},[t._v("Example_SndRcvEvent")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("VOID"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    UINT32 uwRet"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    TSK_INIT_PARAM_S stTask1"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{attrs:{class:"token comment"}},[t._v("/*事件初始化*/")]),t._v("\n    uwRet "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("LOS_EventInit")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v("example_event"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("uwRet "),s("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v(" LOS_OK"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{attrs:{class:"token function"}},[t._v("printf")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"init event failed .\\r\\n"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" LOS_NOK"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{attrs:{class:"token comment"}},[t._v("/*创建任务*/")]),t._v("\n    "),s("span",{attrs:{class:"token function"}},[t._v("memset")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v("stTask1"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("sizeof")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TSK_INIT_PARAM_S"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    stTask1"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pfnTaskEntry "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TSK_ENTRY_FUNC"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("Example_Event"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    stTask1"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pcName       "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"EventTsk1"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    stTask1"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("uwStackSize  "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" LOSCFG_BASE_CORE_TSK_DEFAULT_STACK_SIZE"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    stTask1"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("usTaskPrio   "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("5")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    uwRet "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("LOS_TaskCreate")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v("g_TestTaskID"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v("stTask1"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("uwRet "),s("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v(" LOS_OK"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{attrs:{class:"token function"}},[t._v("printf")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"task create failed .\\r\\n"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" LOS_NOK"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{attrs:{class:"token comment"}},[t._v("/*写用例任务等待的事件类型*/")]),t._v("\n    "),s("span",{attrs:{class:"token function"}},[t._v("printf")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"Example_TaskEntry_Event write event .\\r\\n"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    uwRet "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("LOS_EventWrite")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v("example_event"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" event_wait"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("uwRet "),s("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v(" LOS_OK"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{attrs:{class:"token function"}},[t._v("printf")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"event write failed .\\r\\n"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" LOS_NOK"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{attrs:{class:"token comment"}},[t._v("/*清标志位*/")]),t._v("\n    "),s("span",{attrs:{class:"token function"}},[t._v("printf")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"EventMask:%d\\r\\n"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("example_event"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("uwEventID"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token function"}},[t._v("LOS_EventClear")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v("example_event"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("~")]),t._v("example_event"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("uwEventID"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token function"}},[t._v("printf")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"EventMask:%d\\r\\n"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("example_event"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("uwEventID"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" LOS_OK"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n")])])]),s("h3",{attrs:{id:"结果验证"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#结果验证","aria-hidden":"true"}},[t._v("#")]),t._v(" 结果验证")]),s("p",[t._v("编译运行得到的结果为：")])])}],!1,null,null,null);a.default=_.exports}}]);