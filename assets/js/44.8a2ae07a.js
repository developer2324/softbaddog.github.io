(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{347:function(t,s,a){"use strict";a.r(s);var n=a(0),_=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"互斥锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#互斥锁","aria-hidden":"true"}},[t._v("#")]),t._v(" 互斥锁")]),a("h2",{attrs:{id:"概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概述","aria-hidden":"true"}},[t._v("#")]),t._v(" 概述")]),a("h3",{attrs:{id:"基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本概念","aria-hidden":"true"}},[t._v("#")]),t._v(" 基本概念")]),a("p",[t._v("互斥锁又称互斥型信号量，是一种特殊的二值性信号量，用于实现对共享资源的独占式处理。")]),a("p",[t._v("任意时刻互斥锁的状态只有两种，开锁或闭锁。当有任务持有时，互斥锁处于闭锁状态，这个任务获得该互斥锁的所有权。当该任务释放它时，该互斥锁被开锁，任务失去该互斥锁的所有权。当一个任务持有互斥锁时，其他任务将不能再对该互斥锁进行开锁或持有。")]),a("p",[t._v("多任务环境下往往存在多个任务竞争同一共享资源的应用场景，互斥锁可被用于对共享资源的保护从而实现独占式访问。另外，互斥锁可以解决信号量存在的优先级翻转问题。")]),a("p",[t._v("Huawei LiteOS提供的互斥锁具有如下特点：")]),a("ul",[a("li",[t._v("通过优先级继承算法，解决优先级翻转问题。")])]),a("h3",{attrs:{id:"运作机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运作机制","aria-hidden":"true"}},[t._v("#")]),t._v(" 运作机制")]),a("p",[a("strong",[t._v("互斥锁运作原理")])]),a("p",[t._v("多任务环境下会存在多个任务访问同一公共资源的场景，而有些公共资源是非共享的，需要任务进行独占式处理。互斥锁怎样来避免这种冲突呢？")]),a("p",[t._v("用互斥锁处理非共享资源的同步访问时，如果有任务访问该资源，则互斥锁为加锁状态。此时其他任务如果想访问这个公共资源则会被阻塞，直到互斥锁被持有该锁的任务释放后，其他任务才能重新访问该公共资源，此时互斥锁再次上锁，如此确保同一时刻只有一个任务正在访问这个公共资源，保证了公共资源操作的完整性。")]),a("p",[t._v("互斥锁运作示意图")]),a("h2",{attrs:{id:"开发指导"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开发指导","aria-hidden":"true"}},[t._v("#")]),t._v(" 开发指导")]),a("h3",{attrs:{id:"使用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用场景","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用场景")]),a("p",[t._v("互斥锁可以提供任务之间的互斥机制，用来防止两个任务在同一时刻访问相同的共享资源。")]),a("h3",{attrs:{id:"功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#功能","aria-hidden":"true"}},[t._v("#")]),t._v(" 功能")]),a("p",[t._v("Huawei LiteOS 系统中的互斥锁模块为用户提供下面几种功能。")]),a("table",[a("thead",[a("tr",[a("th",[t._v("功能分类")]),a("th",[t._v("接口名")]),a("th",[t._v("描述")])])]),a("tbody",[a("tr",[a("td",[t._v("互斥锁的创建和删除")]),a("td",[a("code",[t._v("LOS_MuxCreate")])]),a("td",[t._v("创建互斥锁")])]),a("tr",[a("td"),a("td",[a("code",[t._v("LOS_MuxDelete")])]),a("td",[t._v("删除指定的互斥锁")])]),a("tr",[a("td",[t._v("互斥锁的申请和释放")]),a("td",[a("code",[t._v("LOS_MuxPend")])]),a("td",[t._v("申请指定的互斥锁")])]),a("tr",[a("td"),a("td",[a("code",[t._v("LOS_MuxPost")])]),a("td",[t._v("释放指定的互斥锁")])])])]),a("h3",{attrs:{id:"开发流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开发流程","aria-hidden":"true"}},[t._v("#")]),t._v(" 开发流程")]),a("p",[t._v("互斥锁典型场景的开发流程：")]),a("ol",[a("li",[a("p",[t._v("创建互斥锁 "),a("code",[t._v("LOS_MuxCreate")]),t._v("。")])]),a("li",[a("p",[t._v("申请互斥锁 "),a("code",[t._v("LOS_MuxPend")]),t._v("。")]),a("p",[t._v("申请模式有三种：无阻塞模式、永久阻塞模式、定时阻塞模式。")]),a("ul",[a("li",[a("p",[t._v("无阻塞模式：任务需要申请互斥锁，若该互斥锁当前没有任务持有，或者持有该互斥锁的任务和申请该互斥锁的任务为同一个任务，则申请成功。")])]),a("li",[a("p",[t._v("永久阻塞模式：任务需要申请互斥锁，若该互斥锁当前没有被占用，则申请成功。否则，该任务进入阻塞态，系统切换到就绪任务中优先级最高者继续执行。任务进入阻塞态后，直到有其他任务释放该互斥锁，阻塞任务才会重新得以执行。")])]),a("li",[a("p",[t._v("定时阻塞模式：任务需要申请互斥锁，若该互斥锁当前没有被占用，则申请成功。否则该任务进入阻塞态，系统切换到就绪任务中优先级最高者继续执行。任务进入阻塞态后，指定时间超时前有其他任务释放该互斥锁，或者用户指定时间超时后，阻塞任务才会重新得以执行。")])])])]),a("li",[a("p",[t._v("释放互斥锁 "),a("code",[t._v("LOS_MuxPost")]),t._v("。")]),a("ul",[a("li",[a("p",[t._v("如果有任务阻塞于指定互斥锁，则唤醒最早被阻塞的任务，该任务进入就绪态，并进行任务调度；")])]),a("li",[a("p",[t._v("如果没有任务阻塞于指定互斥锁，则互斥锁释放成功。")])])])]),a("li",[a("p",[t._v("删除互斥锁 "),a("code",[t._v("LOS_MuxDelete")]),t._v("。")])])]),a("h3",{attrs:{id:"互斥锁错误码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#互斥锁错误码","aria-hidden":"true"}},[t._v("#")]),t._v(" 互斥锁错误码")]),a("p",[t._v("对互斥锁存在失败的可能性操作，包括互斥锁创建，互斥锁删除，互斥锁申请，互斥锁释放。")]),a("table",[a("thead",[a("tr",[a("th",[t._v("序号")]),a("th",[t._v("定义")]),a("th",[t._v("实际数值")]),a("th",[t._v("描述")]),a("th",[t._v("参考解决方案")])])]),a("tbody",[a("tr",[a("td",[t._v("1")]),a("td",[a("code",[t._v("LOS_ERRNO_MUX_NO_MEMORY")])]),a("td",[t._v("0x02001d00")]),a("td",[t._v("内存请求失败")]),a("td",[t._v("减少互斥锁限制数量的上限")])]),a("tr",[a("td",[t._v("2")]),a("td",[a("code",[t._v("LOS_ERRNO_MUX_INVALID")])]),a("td",[t._v("0x02001d01")]),a("td",[t._v("互斥锁不可用")]),a("td",[t._v("传入有效的互斥锁的ID")])]),a("tr",[a("td",[t._v("3")]),a("td",[a("code",[t._v("LOS_ERRNO_MUX_PTR_NULL")])]),a("td",[t._v("0x02001d02")]),a("td",[t._v("入参为空")]),a("td",[t._v("确保入参可用")])]),a("tr",[a("td",[t._v("4")]),a("td",[a("code",[t._v("LOS_ERRNO_MUX_ALL_BUSY")])]),a("td",[t._v("0x02001d03")]),a("td",[t._v("没有互斥锁可用")]),a("td",[t._v("增加互斥锁限制数量的上限")])]),a("tr",[a("td",[t._v("5")]),a("td",[a("code",[t._v("LOS_ERRNO_MUX_UNAVAILABLE")])]),a("td",[t._v("0x02001d04")]),a("td",[t._v("锁失败，因为锁被其他线程使用")]),a("td",[t._v("等待其他线程解锁或者设置等待时间")])]),a("tr",[a("td",[t._v("6")]),a("td",[a("code",[t._v("LOS_ERRNO_MUX_PEND_INTERR")])]),a("td",[t._v("0x02001d05")]),a("td",[t._v("在中断中使用互斥锁")]),a("td",[t._v("在中断中禁止调用此接口")])]),a("tr",[a("td",[t._v("7")]),a("td",[a("code",[t._v("LOS_ERRNO_MUX_PEND_IN_LOCK")])]),a("td",[t._v("0x02001d06")]),a("td",[t._v("任务调度没有使能，线程等待另一个线程释放锁")]),a("td",[t._v("设置PEND为非阻塞模式或者使能任务调度")])]),a("tr",[a("td",[t._v("8")]),a("td",[a("code",[t._v("LOS_ERRNO_MUX_TIMEOUT")])]),a("td",[t._v("0x02001d07")]),a("td",[t._v("互斥锁PEND超时")]),a("td",[t._v("增加等待时间或者设置一直等待模式")])]),a("tr",[a("td",[t._v("9")]),a("td",[a("code",[t._v("LOS_ERRNO_MUX_OVERFLOW")])]),a("td",[t._v("0x02001d08")]),a("td",[t._v("暂未使用，待扩展")]),a("td",[t._v("无")])]),a("tr",[a("td",[t._v("10")]),a("td",[a("code",[t._v("LOS_ERRNO_MUX_PENDED")])]),a("td",[t._v("0x02001d09")]),a("td",[t._v("删除正在使用的锁")]),a("td",[t._v("等待解锁再删除锁")])]),a("tr",[a("td",[t._v("11")]),a("td",[a("code",[t._v("LOS_ERRNO_MUX_GET_COUNT_ERR")])]),a("td",[t._v("0x02001d0a")]),a("td",[t._v("暂未使用，待扩展")]),a("td",[t._v("无")])]),a("tr",[a("td",[t._v("12")]),a("td",[a("code",[t._v("LOS_ERRNO_MUX_REG_ERROR")])]),a("td",[t._v("0x02001d0b")]),a("td",[t._v("暂未使用，待扩展")]),a("td",[t._v("无")])])])]),a("p",[a("strong",[t._v("错误码定义：")]),t._v(" 错误码是一个 32 位的存储单元，31~24 位表示错误等级，23~16 位表示错误码标志，15~8 位代表错误码所属模块，7~0 位表示错误码序号，如下")]),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{attrs:{class:"token macro property"}},[t._v("#"),a("span",{attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" LOS_ERRNO_OS_ERROR(MID, ERRNO)  \\\n(LOS_ERRTYPE_ERROR | LOS_ERRNO_OS_ID | ((UINT32)(MID) << 8) | (ERRNO))")]),t._v("\n")])])]),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),a("ul",[a("li",[t._v("LOS_ERRTYPE_ERROR：Define critical OS errors")]),a("li",[t._v("LOS_ERRNO_OS_ID：OS error code flag")]),a("li",[t._v("LOS_MOD_MUX：Mutex module ID")]),a("li",[t._v("MID：OS_MOUDLE_ID")]),a("li",[t._v("ERRNO：error ID number")])]),a("p",[t._v("例如：")]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("LOS_ERRNO_MUX_TIMEOUT       LOS_ERRNO_OS_ERROR(LOS_MOD_MUX, 0x07)   \n")])])])]),a("h2",{attrs:{id:"注意事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意事项","aria-hidden":"true"}},[t._v("#")]),t._v(" 注意事项")]),a("ul",[a("li",[a("p",[t._v("两个任务不能对同一把互斥锁加锁。如果某任务对已被持有的互斥锁加锁，则该任务会被挂起，直到持有该锁的任务对互斥锁解锁，才能执行对这把互斥锁的加锁操作。")])]),a("li",[a("p",[t._v("互斥锁不能在中断服务程序中使用。")])]),a("li",[a("p",[t._v("Huawei LiteOS作为实时操作系统需要保证任务调度的实时性，尽量避免任务的长时间阻塞，因此在获得互斥锁之后，应该尽快释放互斥锁。")])]),a("li",[a("p",[t._v("持有互斥锁的过程中，不得再调用 "),a("code",[t._v("LOS_TaskPriSet")]),t._v(" 等接口更改持有互斥锁任务的优先级。")])])]),a("h2",{attrs:{id:"编程实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编程实例","aria-hidden":"true"}},[t._v("#")]),t._v(" 编程实例")]),a("h3",{attrs:{id:"实例描述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例描述","aria-hidden":"true"}},[t._v("#")]),t._v(" 实例描述")]),a("p",[t._v("本实例实现如下流程。")]),a("ol",[a("li",[a("p",[t._v("任务 "),a("code",[t._v("Example_TaskEntry")]),t._v(" 创建一个互斥锁，锁任务调度，创建两个任务 "),a("code",[t._v("Example_MutexTask1")]),t._v("、"),a("code",[t._v("Example_MutexTask2")]),t._v(", "),a("code",[t._v("Example_MutexTask2")]),t._v(" 优先级高于 "),a("code",[t._v("Example_MutexTask1")]),t._v(" ，解锁任务调度。")])]),a("li",[a("p",[a("code",[t._v("Example_MutexTask2")]),t._v(" 被调度，永久申请互斥锁，然后任务休眠 100Tick，"),a("code",[t._v("Example_MutexTask2")]),t._v(" 挂起，"),a("code",[t._v("Example_MutexTask1")]),t._v(" 被唤醒。")])]),a("li",[a("p",[a("code",[t._v("Example_MutexTask1")]),t._v(" 申请互斥锁，等待时间为 10Tick，因互斥锁仍被 "),a("code",[t._v("Example_MutexTask2")]),t._v(" 持有，"),a("code",[t._v("Example_MutexTask1")]),t._v(" 挂起，10Tick 后未拿到互斥锁，"),a("code",[t._v("Example_MutexTask1")]),t._v(" 被唤醒，试图以永久等待申请互斥锁，"),a("code",[t._v("Example_MutexTask1")]),t._v(" 挂起。")])]),a("li",[a("p",[t._v("100Tick 后 "),a("code",[t._v("Example_MutexTask2")]),t._v(" 唤醒， 释放互斥锁后，"),a("code",[t._v("Example_MutexTask1")]),t._v(" 被调度运行，最后释放互斥锁。")])]),a("li",[a("p",[a("code",[t._v("Example_MutexTask1")]),t._v(" 执行完，300Tick后任务 "),a("code",[t._v("Example_TaskEntry")]),t._v(" 被调度运行，删除互斥锁。")])])]),a("h3",{attrs:{id:"编程示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编程示例","aria-hidden":"true"}},[t._v("#")]),t._v(" 编程示例")]),a("p",[t._v("前提条件：")]),a("ul",[a("li",[a("p",[t._v("在 "),a("code",[t._v("los_config.h")]),t._v(" 中，将 "),a("code",[t._v("LOSCFG_BASE_IPC_MUX")]),t._v(" 配置项打开。")])]),a("li",[a("p",[t._v("配好 "),a("code",[t._v("LOSCFG_BASE_IPC_MUX_LIMIT")]),t._v(" 最大的互斥锁个数。")])])]),a("p",[t._v("代码实现如下：")]),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("/*互斥锁句柄ID*/")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" UINT32 g_Testmux01"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("/*任务PID*/")]),t._v("\nUINT32 g_TestTaskID01"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nUINT32 g_TestTaskID02"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" VOID "),a("span",{attrs:{class:"token function"}},[t._v("Example_MutexTask1")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    UINT32 uwRet"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{attrs:{class:"token function"}},[t._v("printf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"task1 try to get mutex, wait 10 Tick.\\r\\n"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{attrs:{class:"token comment"}},[t._v("/*申请互斥锁*/")]),t._v("\n    uwRet"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token function"}},[t._v("LOS_MuxPend")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("g_Testmux01"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("10")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("uwRet "),a("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" LOS_OK"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token function"}},[t._v("printf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"task1 get mutex g_Testmux01.\\r\\n"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token comment"}},[t._v("/*释放互斥锁*/")]),t._v("\n        "),a("span",{attrs:{class:"token function"}},[t._v("LOS_MuxPost")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("g_Testmux01"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("uwRet "),a("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" LOS_ERRNO_MUX_TIMEOUT "),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token function"}},[t._v("printf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"task1 timeout and try to get  mutex, wait forever.\\r\\n"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token comment"}},[t._v("/*LOS_WAIT_FOREVER方式申请互斥锁,获取不到时程序阻塞，不会返回*/")]),t._v("\n        uwRet "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("LOS_MuxPend")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("g_Testmux01"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LOS_WAIT_FOREVER"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("uwRet "),a("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" LOS_OK"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{attrs:{class:"token function"}},[t._v("printf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"task1 wait forever,got mutex g_Testmux01 success.\\r\\n"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{attrs:{class:"token comment"}},[t._v("/*释放互斥锁*/")]),t._v("\n            "),a("span",{attrs:{class:"token function"}},[t._v("LOS_MuxPost")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("g_Testmux01"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            uwRet "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("LOS_InspectStatusSetByID")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LOS_INSPECT_MUTEX"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("LOS_INSPECT_STU_SUCCESS"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LOS_OK "),a("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v(" uwRet"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n            "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{attrs:{class:"token function"}},[t._v("printf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"Set Inspect Status Err.\\r\\n"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" VOID "),a("span",{attrs:{class:"token function"}},[t._v("Example_MutexTask2")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    UINT32 uwRet"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{attrs:{class:"token function"}},[t._v("printf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"task2 try to get mutex, wait forever.\\r\\n"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("/*申请互斥锁*/")]),t._v("\n    uwRet"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token function"}},[t._v("LOS_MuxPend")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("g_Testmux01"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LOS_WAIT_FOREVER"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("uwRet "),a("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v(" LOS_OK"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token function"}},[t._v("printf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"task2 LOS_MuxPend failed.\\r\\n"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{attrs:{class:"token function"}},[t._v("printf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"task2 get mutex g_Testmux01 and suspend 100 Tick.\\r\\n"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{attrs:{class:"token comment"}},[t._v("/*任务休眠100 Tick*/")]),t._v("\n    "),a("span",{attrs:{class:"token function"}},[t._v("LOS_TaskDelay")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("100")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{attrs:{class:"token function"}},[t._v("printf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"task2 resumed and post the g_Testmux01\\r\\n"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("/*释放互斥锁*/")]),t._v("\n    "),a("span",{attrs:{class:"token function"}},[t._v("LOS_MuxPost")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("g_Testmux01"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nUINT32 "),a("span",{attrs:{class:"token function"}},[t._v("Example_MutexLock")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("VOID"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    UINT32 uwRet"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    TSK_INIT_PARAM_S stTask1"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    TSK_INIT_PARAM_S stTask2"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{attrs:{class:"token comment"}},[t._v("/*创建互斥锁*/")]),t._v("\n    "),a("span",{attrs:{class:"token function"}},[t._v("LOS_MuxCreate")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v("g_Testmux01"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{attrs:{class:"token comment"}},[t._v("/*锁任务调度*/")]),t._v("\n    "),a("span",{attrs:{class:"token function"}},[t._v("LOS_TaskLock")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{attrs:{class:"token comment"}},[t._v("/*创建任务1*/")]),t._v("\n    "),a("span",{attrs:{class:"token function"}},[t._v("memset")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v("stTask1"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("sizeof")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TSK_INIT_PARAM_S"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    stTask1"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pfnTaskEntry "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TSK_ENTRY_FUNC"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("Example_MutexTask1"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    stTask1"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pcName       "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"MutexTsk1"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    stTask1"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("uwStackSize  "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" LOSCFG_BASE_CORE_TSK_DEFAULT_STACK_SIZE"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    stTask1"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("usTaskPrio   "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("5")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    uwRet "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("LOS_TaskCreate")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v("g_TestTaskID01"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v("stTask1"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("uwRet "),a("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v(" LOS_OK"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token function"}},[t._v("printf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"task1 create failed.\\r\\n"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" LOS_NOK"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{attrs:{class:"token comment"}},[t._v("/*创建任务2*/")]),t._v("\n    "),a("span",{attrs:{class:"token function"}},[t._v("memset")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v("stTask2"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("sizeof")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TSK_INIT_PARAM_S"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    stTask2"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pfnTaskEntry "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TSK_ENTRY_FUNC"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("Example_MutexTask2"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    stTask2"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pcName       "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"MutexTsk2"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    stTask2"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("uwStackSize  "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" LOSCFG_BASE_CORE_TSK_DEFAULT_STACK_SIZE"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    stTask2"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("usTaskPrio   "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("4")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    uwRet "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("LOS_TaskCreate")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v("g_TestTaskID02"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v("stTask2"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("uwRet "),a("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v(" LOS_OK"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token function"}},[t._v("printf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"task2 create failed.\\r\\n"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" LOS_NOK"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{attrs:{class:"token comment"}},[t._v("/*解锁任务调度*/")]),t._v("\n    "),a("span",{attrs:{class:"token function"}},[t._v("LOS_TaskUnlock")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("/*任务休眠300 Tick*/")]),t._v("\n    "),a("span",{attrs:{class:"token function"}},[t._v("LOS_TaskDelay")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("300")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{attrs:{class:"token comment"}},[t._v("/*删除互斥锁*/")]),t._v("\n    "),a("span",{attrs:{class:"token function"}},[t._v("LOS_MuxDelete")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("g_Testmux01"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" LOS_OK"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("   \n")])])]),a("h3",{attrs:{id:"结果验证"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结果验证","aria-hidden":"true"}},[t._v("#")]),t._v(" 结果验证")]),a("p",[t._v("编译运行得到的结果为：")])])}],!1,null,null,null);s.default=_.exports}}]);