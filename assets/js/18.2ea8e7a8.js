(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{207:function(a,t,r){"use strict";r.r(t);var s=r(0),e=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("div",{staticClass:"content"},[r("h1",{attrs:{id:"为什么要使用-rtos-？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#为什么要使用-rtos-？","aria-hidden":"true"}},[a._v("#")]),a._v(" 为什么要使用 RTOS ？")]),r("h2",{attrs:{id:"引言"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#引言","aria-hidden":"true"}},[a._v("#")]),a._v(" 引言")]),r("p",[a._v("随着物联网和AI快速发展，人们对设备要求也越来越高，程序的复杂性也在指数级暴增。RTOS（嵌入式实时操作系统）就好比一座“大厦”的地基，只有构筑在坚固可靠的基石上，我们的物联网产品才能应对各种考验。下面我将从3个方面（RTOS 的前世今生，RTOS 的优缺点，如何选择 RTOS）来阐述为什么物联网产品要使用 RTOS？")]),r("h2",{attrs:{id:"_1-rtos-的前世今生"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-rtos-的前世今生","aria-hidden":"true"}},[a._v("#")]),a._v(" 1. RTOS 的前世今生")]),r("h3",{attrs:{id:"第一个-rtos-产品"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第一个-rtos-产品","aria-hidden":"true"}},[a._v("#")]),a._v(" 第一个 RTOS 产品")]),r("h3",{attrs:{id:"嵌入式应用发展历程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#嵌入式应用发展历程","aria-hidden":"true"}},[a._v("#")]),a._v(" 嵌入式应用发展历程")]),r("ul",[r("li",[a._v("实时性要求")]),r("li",[a._v("模块化要求")]),r("li",[a._v("驱动")]),r("li")]),r("h2",{attrs:{id:"_2-rtos-的优缺点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-rtos-的优缺点","aria-hidden":"true"}},[a._v("#")]),a._v(" 2. RTOS 的优缺点")]),r("h3",{attrs:{id:"rtos-的优点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#rtos-的优点","aria-hidden":"true"}},[a._v("#")]),a._v(" RTOS 的优点")]),r("h3",{attrs:{id:"rtos-的不足"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#rtos-的不足","aria-hidden":"true"}},[a._v("#")]),a._v(" RTOS 的不足")]),r("h3",{attrs:{id:"裸机-vs-rtos"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#裸机-vs-rtos","aria-hidden":"true"}},[a._v("#")]),a._v(" 裸机 vs. RTOS")]),r("p",[a._v("当我们进入嵌入式这个领域的时候，往往首先接触的都是单片机编程，单片机编程又首选 51 单片机来入门。这里面说的单片机编程通常都是指裸机编程，即不加入任何 RTOS（Real Time Operation System 实时操作系统）的程序。常用的 RTOS 有国外的 FreeRTOS、ucOS、RTX 和国内的 RT-Thread、Huawei LiteOS 和 ALOS Things 等，其中尤以国外开源且免费的 FreeRTOS 的市场占有率最高。")]),r("p",[a._v("在裸机系统中，所有的程序基本都是自己写的，所有的操作都是在一个无限的大循环里面实现。现实生活中的很多中小型的电子产品用的都是裸机系统，而且也能够满足需求。")]),r("h2",{attrs:{id:"_3-如何选择-rtos-？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-如何选择-rtos-？","aria-hidden":"true"}},[a._v("#")]),a._v(" 3. 如何选择 RTOS ？")]),r("h3",{attrs:{id:"rtos-已经成为物联网产品标配"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#rtos-已经成为物联网产品标配","aria-hidden":"true"}},[a._v("#")]),a._v(" RTOS 已经成为物联网产品标配")]),r("p",[a._v("为了应对物联网的快速发展，RTOS 已经成为产品标配")]),r("h3",{attrs:{id:"针对你的应用场景"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#针对你的应用场景","aria-hidden":"true"}},[a._v("#")]),a._v(" 针对你的应用场景")]),r("p",[a._v("这个用来教学的 RTOS，我们不会完全自己写一个，不会再重复的造轮子，而是选取目前国内最红火的国产 RT-Thread 为蓝本，将其抽丝剥茧，层层叠加，从 0 到 1 写出来。在实现的过程中，数据类型、变量名、函数名称、文件类型等都完全按照 RT-Thread 里面的写法，不会自己再重新命名。这样学完我们这个课程之后，就可以无缝地过度到 RT-Thread 的使用。")]),r("h2",{attrs:{id:"结语"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#结语","aria-hidden":"true"}},[a._v("#")]),a._v(" 结语")])])}],!1,null,null,null);t.default=e.exports}}]);