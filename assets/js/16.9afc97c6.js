(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{180:function(t,s,a){"use strict";a.r(s);var n=a(0),_=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#队列","aria-hidden":"true"}},[t._v("#")]),t._v(" 队列")]),a("h2",{attrs:{id:"概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概述","aria-hidden":"true"}},[t._v("#")]),t._v(" 概述")]),a("h3",{attrs:{id:"基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本概念","aria-hidden":"true"}},[t._v("#")]),t._v(" 基本概念")]),a("p",[t._v("队列又称消息队列，是一种常用于任务间通信的数据结构，实现了接收来自任务或中断的不固定长度的消息，并根据不同的接口选择传递消息是否存放在自己空间。任务能够从队列里面读取消息，当队列中的消息是空时，挂起读取任务；当队列中有新消息时，挂起的读取任务被唤醒并处理新消息。")]),a("p",[t._v("用户在处理业务时，消息队列提供了异步处理机制，允许将一个消息放入队列，但并不立即处理它，同时队列还能起到缓冲消息作用。")]),a("p",[t._v("Huawei LiteOS中使用队列数据结构实现任务异步通信工作，具有如下特性：")]),a("ul",[a("li",[a("p",[t._v("消息以先进先出方式排队，支持异步读写工作方式。")])]),a("li",[a("p",[t._v("读队列和写队列都支持超时机制。")])]),a("li",[a("p",[t._v("发送消息类型由通信双方约定，可以允许不同长度（不超过队列节点最大值）消息。")])]),a("li",[a("p",[t._v("一个任务能够从任意一个消息队列接收和发送消息。")])]),a("li",[a("p",[t._v("多个任务能够从同一个消息队列接收和发送消息。")])]),a("li",[a("p",[t._v("当队列使用结束后，如果是动态申请的内存，需要通过释放内存函数回收。")])])]),a("h3",{attrs:{id:"运作机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运作机制","aria-hidden":"true"}},[t._v("#")]),t._v(" 运作机制")]),a("h4",{attrs:{id:"队列控制块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#队列控制块","aria-hidden":"true"}},[t._v("#")]),t._v(" 队列控制块")]),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" tagQueueCB\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    UINT8       "),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("pucQueue"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),a("span",{attrs:{class:"token comment"}},[t._v("/**< 队列指针 */")]),t._v("\n    UINT16      usQueueState"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{attrs:{class:"token comment"}},[t._v("/**< 队列状态 */")]),t._v("\n    UINT16      usQueueLen"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),a("span",{attrs:{class:"token comment"}},[t._v("/**< 队列中消息个数 */")]),t._v("\n    UINT16      usQueueSize"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{attrs:{class:"token comment"}},[t._v("/**< 消息节点大小 */")]),t._v("\n    UNIT16      usQueueID"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),a("span",{attrs:{class:"token comment"}},[t._v("/**< 队列ID号 */")]),t._v("\n    UINT16      usQueueHead"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{attrs:{class:"token comment"}},[t._v("/**< 消息头节点位置（数组下标）*/")]),t._v("\n    UINT16      usQueueTail"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{attrs:{class:"token comment"}},[t._v("/**< 消息尾节点位置（数组下标）*/")]),t._v("\n    UINT16      usReadWritableCnt"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("/**< 队列中可写或可读消息数，0表示可读，1表示可写*/")]),t._v("\n    LOS_DL_LIST stReadWriteableList"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{attrs:{class:"token comment"}},[t._v("/**< 读写阻塞队列，0表示读阻塞队列，1表示写阻塞队列*/")]),t._v("\n    LOS_DL_LIST stMemList"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),a("span",{attrs:{class:"token comment"}},[t._v("/**< MailBox模块使用 */")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" QUEUE_CB_S"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n")])])]),a("p",[t._v("每个队列控制块中都含有队列状态，表示该队列的使用情况：")]),a("ul",[a("li",[a("p",[a("code",[t._v("OS_QUEUE_UNUSED")]),t._v("：队列没有使用")])]),a("li",[a("p",[a("code",[t._v("OS_QUEUE_INUSED")]),t._v("：队列被使用")])])]),a("h3",{attrs:{id:"队列运作原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#队列运作原理","aria-hidden":"true"}},[t._v("#")]),t._v(" 队列运作原理")]),a("p",[t._v("创建队列时，根据用户传入队列长度和消息节点大小来开辟相应的内存空间以供该队列使用，返回队列 ID。")]),a("p",[t._v("在队列控制块中维护一个消息头节点位置 Head 和一个消息尾节点位置 Tail 来表示当前队列中消息存储情况。Head 表示队列中被占用消息的起始位置。 Tail 表示队列中被空闲消息的起始位置。刚创建时 Head 和 Tail 均指向队列起始位置。")]),a("p",[t._v("写队列时，根据 Tail 找到被占用消息节点末尾的空闲节点作为数据写入对象。如果 Tail 已经指向队列尾则采用回卷方式。根据 usWritableCnt 判断队列是否可以写入，不能对已满（usWritableCnt为0）队列进行写队列操作。")]),a("p",[t._v("读队列时，根据Head找到最先写入队列中的消息节点进行读取。如果Head已经指向队列尾则采用回卷方式。根据usReadableCnt判断队列是否有消息读取，对全部空闲（usReadableCnt为0）队列进行读队列操作会引起任务挂起。")]),a("p",[t._v("删除队列时，根据传入的队列 ID 寻找到对应的队列，把队列状态置为未使用，释放原队列所占的空间，对应的队列控制头置为初始状态。")]),a("p",[t._v("队列读写数据操作示意图")]),a("h2",{attrs:{id:"开发指导"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开发指导","aria-hidden":"true"}},[t._v("#")]),t._v(" 开发指导")]),a("h3",{attrs:{id:"功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#功能","aria-hidden":"true"}},[t._v("#")]),t._v(" 功能")]),a("p",[t._v("Huawei LiteOS中Message消息处理模块提供了以下功能。")]),a("table",[a("thead",[a("tr",[a("th",[t._v("功能分类")]),a("th",[t._v("接口名")]),a("th",[t._v("描述")])])]),a("tbody",[a("tr",[a("td",[t._v("创建消息队列")]),a("td",[a("code",[t._v("LOS_QueueCreate")])]),a("td",[t._v("创建一个消息队列")])]),a("tr",[a("td",[t._v("读队列（不带拷贝）")]),a("td",[a("code",[t._v("LOS_QueueRead")])]),a("td",[t._v("读取指定队列中的数据。（buff里存放的是队列节点的地址）")])]),a("tr",[a("td",[t._v("写队列（不带拷贝）")]),a("td",[a("code",[t._v("LOS_QueueWrite")])]),a("td",[t._v("向指定队列写数据。（写入队列节点中的是buff的地址）")])]),a("tr",[a("td",[t._v("读队列（带拷贝）")]),a("td",[a("code",[t._v("LOS_QueueReadCopy")])]),a("td",[t._v("读取指定队列中的数据。（buff里存放的是队列节点中的数据）")])]),a("tr",[a("td",[t._v("写队列（带拷贝）")]),a("td",[a("code",[t._v("LOS_QueueWriteCopy")])]),a("td",[t._v("向指定队列写数据。（写入队列节点中的是buff中的数据）")])]),a("tr",[a("td",[t._v("写队列（头部）")]),a("td",[a("code",[t._v("LOS_QueueWriteHead")])]),a("td",[t._v("向指定队列的头部写数据")])]),a("tr",[a("td",[t._v("删除队列")]),a("td",[a("code",[t._v("LOS_QueueDelete")])]),a("td",[t._v("删除一个指定的队列")])]),a("tr",[a("td",[t._v("获取队列信息")]),a("td",[a("code",[t._v("LOS_QueueInfoGet")])]),a("td",[t._v("获取指定队列信息")])])])]),a("h3",{attrs:{id:"开发流程-使用队列模块的典型流程如下："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开发流程-使用队列模块的典型流程如下：","aria-hidden":"true"}},[t._v("#")]),t._v(" 开发流程  使用队列模块的典型流程如下：")]),a("ol",[a("li",[a("p",[t._v("创建消息队列 "),a("code",[t._v("LOS_QueueCreate")]),t._v("。")]),a("p",[t._v("创建成功后，可以得到消息队列的 ID 值。")])]),a("li",[a("p",[t._v("写队列操作函数 "),a("code",[t._v("LOS_QueueWrite")]),t._v("。")])]),a("li",[a("p",[t._v("读队列操作函数 "),a("code",[t._v("LOS_QueueRead")]),t._v("。")])]),a("li",[a("p",[t._v("获取队列信息函数 "),a("code",[t._v("LOS_QueueInfoGet")]),t._v("。")])]),a("li",[a("p",[t._v("删除队列 "),a("code",[t._v("LOS_QueueDelete")]),t._v("。")])])]),a("h3",{attrs:{id:"queue-错误码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#queue-错误码","aria-hidden":"true"}},[t._v("#")]),t._v(" QUEUE 错误码")]),a("p",[t._v("对队列存在失败可能性的操作，包括创建队列、删除队列等等，均需要返回对应的错误码，以便快速定位错误原因。")]),a("table",[a("thead",[a("tr",[a("th",[t._v("序号")]),a("th",[t._v("定义")]),a("th",[t._v("实际数值")]),a("th",[t._v("描述")]),a("th",[t._v("参考解决方案")])])]),a("tbody",[a("tr",[a("td",[t._v("1")]),a("td",[a("code",[t._v("LOS_ERRNO_QUEUE_MAXNUM_ZERO")])]),a("td",[t._v("0x02000600")]),a("td",[t._v("队列资源的最大数目配置为0")]),a("td",[t._v("配置要大于0的队列资源的最大数量。如果不使用队列模块，则将配置项设置为将队列资源的最大数量的剪裁设置为NO。")])]),a("tr",[a("td",[t._v("2")]),a("td",[a("code",[t._v("LOS_ERRNO_QUEUE_NO_MEMORY")])]),a("td",[t._v("0x02000601")]),a("td",[t._v("队列块内存无法初始化")]),a("td",[t._v("为队列块分配更大的内存分区，或减少队列资源的最大数量")])]),a("tr",[a("td",[t._v("3")]),a("td",[a("code",[t._v("LOS_ERRNO_QUEUE_CREATE_NO_MEMORY")])]),a("td",[t._v("0x02000602")]),a("td",[t._v("队列创建的内存未能被请求")]),a("td",[t._v("为队列分配更多的内存，或减少要创建的队列中的队列长度和节点的数目。")])]),a("tr",[a("td",[t._v("4")]),a("td",[a("code",[t._v("LOS_ERRNO_QUEUE_SIZE_TOO_BIG")])]),a("td",[t._v("0x02000603")]),a("td",[t._v("队列创建时消息长度超过上限")]),a("td",[t._v("更改创建队列中最大消息的大小至不超过上限")])]),a("tr",[a("td",[t._v("5")]),a("td",[a("code",[t._v("LOS_ERRNO_QUEUE_CB_UNAVAILABLE")])]),a("td",[t._v("0x02000604")]),a("td",[t._v("已超过创建的队列的数量的上限")]),a("td",[t._v("增加队列的配置资源数量")])]),a("tr",[a("td",[t._v("6")]),a("td",[a("code",[t._v("LOS_ERRNO_QUEUE_NOT_FOUND")])]),a("td",[t._v("0x02000605")]),a("td",[t._v("无效的队列")]),a("td",[t._v("确保队列ID是有效的")])]),a("tr",[a("td",[t._v("7")]),a("td",[a("code",[t._v("LOS_ERRNO_QUEUE_PEND_IN_LOCK")])]),a("td",[t._v("0x02000606")]),a("td",[t._v("当任务被锁定时，禁止在队列中被阻塞")]),a("td",[t._v("使用队列前解锁任务")])]),a("tr",[a("td",[t._v("8")]),a("td",[a("code",[t._v("LOS_ERRNO_QUEUE_TIMEOUT")])]),a("td",[t._v("0x02000607")]),a("td",[t._v("等待处理队列的时间超时")]),a("td",[t._v("检查设置的超时时间是否合适")])]),a("tr",[a("td",[t._v("9")]),a("td",[a("code",[t._v("LOS_ERRNO_QUEUE_IN_TSKUSE")])]),a("td",[t._v("0x02000608")]),a("td",[t._v("阻塞任务的队列不能被删除")]),a("td",[t._v("使任务能够获得资源而不是在队列中被阻塞")])]),a("tr",[a("td",[t._v("10")]),a("td",[a("code",[t._v("LOS_ERRNO_QUEUE_WRITE_IN_INTERRUPT")])]),a("td",[t._v("0x02000609")]),a("td",[t._v("在中断处理程序中不能写队列")]),a("td",[t._v("将写队列设为非阻塞模式")])]),a("tr",[a("td",[t._v("11")]),a("td",[a("code",[t._v("LOS_ERRNO_QUEUE_NOT_CREATE")])]),a("td",[t._v("0x0200060a")]),a("td",[t._v("队列未创建")]),a("td",[t._v("检查队列中传递的句柄是否有效")])]),a("tr",[a("td",[t._v("12")]),a("td",[a("code",[t._v("LOS_ERRNO_QUEUE_IN_TSKWRITE")])]),a("td",[t._v("0x0200060b")]),a("td",[t._v("队列读写不同步")]),a("td",[t._v("同步队列的读写")])]),a("tr",[a("td",[t._v("13")]),a("td",[a("code",[t._v("LOS_ERRNO_QUEUE_CREAT_PTR_NULL")])]),a("td",[t._v("0x0200060c")]),a("td",[t._v("队列创建过程中传递的参数为空指针")]),a("td",[t._v("确保传递的参数不为空指针")])]),a("tr",[a("td",[t._v("14")]),a("td",[a("code",[t._v("LOS_ERRNO_QUEUE_PARA_ISZERO")])]),a("td",[t._v("0x0200060d")]),a("td",[t._v("队列创建过程中传递的队列长度或消息节点大小为0")]),a("td",[t._v("传入正确的队列长度和消息节点大小")])]),a("tr",[a("td",[t._v("15")]),a("td",[a("code",[t._v("LOS_ERRNO_QUEUE_INVALID")])]),a("td",[t._v("0x0200060e")]),a("td",[t._v("读取队列、写入队列的handle无效")]),a("td",[t._v("检查队列中传递的handle是否有效")])]),a("tr",[a("td",[t._v("16")]),a("td",[a("code",[t._v("LOS_ERRNO_QUEUE_READ_PTR_NULL")])]),a("td",[t._v("0x0200060f")]),a("td",[t._v("队列读取过程中传递的指针为空")]),a("td",[t._v("检查指针中传递的是否为空")])]),a("tr",[a("td",[t._v("17")]),a("td",[a("code",[t._v("LOS_ERRNO_QUEUE_READSIZE_ISZERO")])]),a("td",[t._v("0x02000610")]),a("td",[t._v("队列读取过程中传递的缓冲区大小为0")]),a("td",[t._v("通过一个正确的缓冲区大小")])]),a("tr",[a("td",[t._v("18")]),a("td",[a("code",[t._v("LOS_ERRNO_QUEUE_WRITE_PTR_NULL")])]),a("td",[t._v("0x02000612")]),a("td",[t._v("队列写入过程中传递的指针为空")]),a("td",[t._v("检查指针中传递的是否为空")])]),a("tr",[a("td",[t._v("19")]),a("td",[a("code",[t._v("LOS_ERRNO_QUEUE_WRITESIZE_ISZERO")])]),a("td",[t._v("0x02000613")]),a("td",[t._v("队列写入过程中传递的缓冲区大小为0")]),a("td",[t._v("通过一个正确的缓冲区大小")])]),a("tr",[a("td",[t._v("20")]),a("td",[a("code",[t._v("LOS_ERRNO_QUEUE_WRITE_SIZE_TOO_BIG")])]),a("td",[t._v("0x02000615")]),a("td",[t._v("队列写入过程中传递的缓冲区大小比队列大小要大")]),a("td",[t._v("减少缓冲区大小，或增大队列节点")])]),a("tr",[a("td",[t._v("21")]),a("td",[a("code",[t._v("LOS_ERRNO_QUEUE_ISFULL")])]),a("td",[t._v("0x02000616")]),a("td",[t._v("在队列写入过程中没有可用的空闲节点")]),a("td",[t._v("确保在队列写入之前，可以使用空闲的节点")])]),a("tr",[a("td",[t._v("22")]),a("td",[a("code",[t._v("LOS_ERRNO_QUEUE_PTR_NULL")])]),a("td",[t._v("0x02000617")]),a("td",[t._v("正在获取队列信息时传递的指针为空")]),a("td",[t._v("检查指针中传递的是否为空")])]),a("tr",[a("td",[t._v("23")]),a("td",[a("code",[t._v("LOS_ERRNO_QUEUE_READ_IN_INTERRUPT")])]),a("td",[t._v("0x02000618")]),a("td",[t._v("在中断处理程序中不能读队列")]),a("td",[t._v("将读队列设为非阻塞模式")])]),a("tr",[a("td",[t._v("24")]),a("td",[a("code",[t._v("LOS_ERRNO_QUEUE_MAIL_HANDLE_INVALID")])]),a("td",[t._v("0x02000619")]),a("td",[t._v("正在释放队列的内存时传递的队列的handle无效")]),a("td",[t._v("检查队列中传递的handle是否有效")])]),a("tr",[a("td",[t._v("25")]),a("td",[a("code",[t._v("LOS_ERRNO_QUEUE_MAIL_PTR_INVALID")])]),a("td",[t._v("0x0200061a")]),a("td",[t._v("传入的消息内存池指针为空")]),a("td",[t._v("检查指针是否为空")])]),a("tr",[a("td",[t._v("26")]),a("td",[a("code",[t._v("LOS_ERRNO_QUEUE_MAIL_FREE_ERROR")])]),a("td",[t._v("0x0200061b")]),a("td",[t._v("membox内存释放失败")]),a("td",[t._v("传入非空membox内存指针")])]),a("tr",[a("td",[t._v("27")]),a("td",[a("code",[t._v("LOS_ERRNO_QUEUE_ISEMPTY")])]),a("td",[t._v("0x0200061d")]),a("td",[t._v("队列已空")]),a("td",[t._v("确保在读取队列时包含消息")])]),a("tr",[a("td",[t._v("28")]),a("td",[a("code",[t._v("LOS_ERRNO_QUEUE_READ_SIZE_TOO_SMALL")])]),a("td",[t._v("0x0200061f")]),a("td",[t._v("读缓冲区大小小于队列大小")]),a("td",[t._v("增加缓冲区大小，或减小队列节点大小")])])])]),a("h2",{attrs:{id:"注意事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意事项","aria-hidden":"true"}},[t._v("#")]),t._v(" 注意事项")]),a("ul",[a("li",[a("p",[t._v("系统可配置的队列资源个数是指：整个系统的队列资源总个数，而非用户能使用的个数。例如：系统软件定时器多占用一个队列资源，那么系统可配置的队列资源就会减少一个。")])]),a("li",[a("p",[t._v("调用 "),a("code",[t._v("LOS_QueueCreate")]),t._v(" 函数时所传入的队列名暂时未使用，作为以后的预留参数。")])]),a("li",[a("p",[t._v("队列接口函数中的入参 uwTimeOut 是指相对时间。")])]),a("li",[a("p",[a("code",[t._v("LOS_QueueReadCopy")]),t._v(" 和 "),a("code",[t._v("LOS_QueueWriteCopy")]),t._v(" 是一组接口，"),a("code",[t._v("LOS_QueueRead")]),t._v(" 和 "),a("code",[t._v("LOS_QueueWrite")]),t._v(" 是一组接口，两组接口需要配套使用。")])]),a("li",[a("p",[t._v("鉴于 "),a("code",[t._v("LOS_QueueWrite")]),t._v(" 和 "),a("code",[t._v("LOS_QueueRead")]),t._v(" 这组接口实际操作的是数据地址，用户必须保证调用 "),a("code",[t._v("LOS_QueueRead")]),t._v(" 获取到的指针所指向内存区域在读队列期间没有被异常修改或释放，否则可能会导致不可预知的后果。")])])]),a("h2",{attrs:{id:"编程实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编程实例","aria-hidden":"true"}},[t._v("#")]),t._v(" 编程实例")]),a("h3",{attrs:{id:"实例描述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例描述","aria-hidden":"true"}},[t._v("#")]),t._v(" 实例描述")]),a("p",[t._v("创建一个队列，两个任务。任务1调用发送接口发送消息；任务2通过接收接口接收消息。")]),a("ol",[a("li",[a("p",[t._v("通过 "),a("code",[t._v("LOS_TaskCreate")]),t._v(" 创建任务1和任务2。")])]),a("li",[a("p",[t._v("通过 "),a("code",[t._v("LOS_QueueCreate")]),t._v(" 创建一个消息队列。")])]),a("li",[a("p",[t._v("在任务1 "),a("code",[t._v("send_Entry")]),t._v(" 中发送消息。")])]),a("li",[a("p",[t._v("在任务2 "),a("code",[t._v("recv_Entry")]),t._v(" 中接收消息。")])]),a("li",[a("p",[t._v("通过 "),a("code",[t._v("LOS_QueueDelete")]),t._v(" 删除队列。")])])]),a("h3",{attrs:{id:"编程示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编程示例","aria-hidden":"true"}},[t._v("#")]),t._v(" 编程示例")]),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{attrs:{class:"token macro property"}},[t._v("#"),a("span",{attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"los_base.h"')])]),t._v("\n"),a("span",{attrs:{class:"token macro property"}},[t._v("#"),a("span",{attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"los_task.h"')])]),t._v("\n"),a("span",{attrs:{class:"token macro property"}},[t._v("#"),a("span",{attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"los_swtmr.h"')])]),t._v("\n"),a("span",{attrs:{class:"token macro property"}},[t._v("#"),a("span",{attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"los_hwi.h"')])]),t._v("\n"),a("span",{attrs:{class:"token macro property"}},[t._v("#"),a("span",{attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"los_queue.h"')])]),t._v("\n"),a("span",{attrs:{class:"token macro property"}},[t._v("#"),a("span",{attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"los_event.h"')])]),t._v("\n"),a("span",{attrs:{class:"token macro property"}},[t._v("#"),a("span",{attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"los_typedef.h"')])]),t._v("\n"),a("span",{attrs:{class:"token macro property"}},[t._v("#"),a("span",{attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"los_api_msgqueue.h"')])]),t._v("\n"),a("span",{attrs:{class:"token macro property"}},[t._v("#"),a("span",{attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"los_inspect_entry.h"')])]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" UINT32 g_uwQueue"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" CHAR abuf"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"test is message x"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("/*任务1发送数据*/")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("*")]),a("span",{attrs:{class:"token function"}},[t._v("send_Entry")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("UINT32 uwParam1"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                UINT32 uwParam2"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                UINT32 uwParam3"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                UINT32 uwParam4"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    UINT32 i "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("uwRet "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    UINT32 uwlen "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("sizeof")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("abuf"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" API_MSG_NUM"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        abuf"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("uwlen "),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'0'")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" i"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        i"),a("span",{attrs:{class:"token operator"}},[t._v("++")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{attrs:{class:"token comment"}},[t._v("/*将abuf里的数据写入队列*/")]),t._v("\n        uwRet "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("LOS_QueueWrite")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("g_uwQueue"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" abuf"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" uwlen"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("uwRet "),a("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v(" LOS_OK"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{attrs:{class:"token function"}},[t._v("dprintf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"send message failure,error:%x\\n"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("uwRet"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),a("span",{attrs:{class:"token function"}},[t._v("LOS_TaskDelay")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("5")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token constant"}},[t._v("NULL")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("/*任务2接收数据*/")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("*")]),a("span",{attrs:{class:"token function"}},[t._v("recv_Entry")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("UINT32 uwParam1"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                UINT32 uwParam2"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                UINT32 uwParam3"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                UINT32 uwParam4"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    UINT32 uwReadbuf"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    UINT32 uwRet "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" LOS_OK"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    UINT32 uwMsgCount "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n        "),a("span",{attrs:{class:"token comment"}},[t._v("/*读取队列里的数据存入uwReadbuf里*/")]),t._v("\n        uwRet "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("LOS_QueueRead")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("g_uwQueue"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v("uwReadbuf"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("24")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("uwRet "),a("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v(" LOS_OK"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{attrs:{class:"token function"}},[t._v("dprintf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"recv message failure,error:%x\\n"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("uwRet"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{attrs:{class:"token keyword"}},[t._v("break")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{attrs:{class:"token function"}},[t._v("dprintf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"recv message:%s\\n"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("*")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("uwReadbuf"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            uwMsgCount"),a("span",{attrs:{class:"token operator"}},[t._v("++")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        \n        "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("void")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token function"}},[t._v("LOS_TaskDelay")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("5")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("/*删除队列*/")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LOS_OK "),a("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("LOS_QueueDelete")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("g_uwQueue"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("void")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token function"}},[t._v("LOS_TaskDelay")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        \n    "),a("span",{attrs:{class:"token function"}},[t._v("dprintf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"delete the queue success!\\n"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \n    "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("API_MSG_NUM "),a("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" uwMsgCount"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        uwRet "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("LOS_InspectStatusSetByID")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LOS_INSPECT_MSG"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("LOS_INSPECT_STU_SUCCESS"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LOS_OK "),a("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v(" uwRet"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n        "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{attrs:{class:"token function"}},[t._v("dprintf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"Set Inspect Status Err\\n"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        uwRet "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("LOS_InspectStatusSetByID")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LOS_INSPECT_MSG"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("LOS_INSPECT_STU_ERROR"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LOS_OK "),a("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v(" uwRet"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n        "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{attrs:{class:"token function"}},[t._v("dprintf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"Set Inspect Status Err\\n"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        \n    "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token constant"}},[t._v("NULL")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nUINT32 "),a("span",{attrs:{class:"token function"}},[t._v("Example_MsgQueue")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("void")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    UINT32 uwRet "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    UINT32 uwTask1"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" uwTask2"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    TSK_INIT_PARAM_S stInitParam1"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{attrs:{class:"token comment"}},[t._v("/*创建任务1*/")]),t._v("\n    stInitParam1"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pfnTaskEntry "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" send_Entry"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    stInitParam1"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("usTaskPrio "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("9")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    stInitParam1"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("uwStackSize "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" LOSCFG_BASE_CORE_TSK_DEFAULT_STACK_SIZE"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    stInitParam1"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pcName "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"sendQueue"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token function"}},[t._v("LOS_TaskLock")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{attrs:{class:"token comment"}},[t._v("//锁住任务，防止新创建的任务比本任务高而发生调度")]),t._v("\n    uwRet "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("LOS_TaskCreate")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v("uwTask1"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v("stInitParam1"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("uwRet "),a("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v(" LOS_OK"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token function"}},[t._v("dprintf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"create task1 failed!,error:%x\\n"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("uwRet"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" uwRet"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{attrs:{class:"token comment"}},[t._v("/*创建任务2*/")]),t._v("\n    stInitParam1"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pfnTaskEntry "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" recv_Entry"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    uwRet "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("LOS_TaskCreate")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v("uwTask2"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v("stInitParam1"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("uwRet "),a("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v(" LOS_OK"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token function"}},[t._v("dprintf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"create task2 failed!,error:%x\\n"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("uwRet"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" uwRet"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{attrs:{class:"token comment"}},[t._v("/*创建队列*/")]),t._v("\n    uwRet "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("LOS_QueueCreate")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"queue"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("5")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v("g_uwQueue"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("24")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("uwRet "),a("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v(" LOS_OK"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token function"}},[t._v("dprintf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"create queue failure!,error:%x\\n"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("uwRet"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{attrs:{class:"token function"}},[t._v("dprintf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"create the queue success!\\n"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token function"}},[t._v("LOS_TaskUnlock")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{attrs:{class:"token comment"}},[t._v("//解锁任务，只有队列创建后才开始任务调度")]),t._v("\n    \n    "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" LOS_OK"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n")])])]),a("h3",{attrs:{id:"结果验证"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结果验证","aria-hidden":"true"}},[t._v("#")]),t._v(" 结果验证")])])}],!1,null,null,null);s.default=_.exports}}]);